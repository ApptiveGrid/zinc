(name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.65' message 'merge in some changes from pharo 7' id 'c1564dd3-0236-0d00-9e9d-efe100aa183a' date '1 November 2018' time '10:27:40.134324 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.64' message 'classify 2 methods in ZnBufferedReadWriteStream' id '1683c1e3-1027-0d00-bdb8-dcc101fac299' date '25 April 2018' time '6:56:31.308962 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.63' message 'fix to ZnCharacterReadStream>>#upToAll:' id '03534932-a526-0d00-b0a8-8a7f01e0601e' date '20 April 2018' time '10:27:32.36426 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.62' message 'incorporate patch to ZnBufferedReadStream from Pharo issue https://pharo.fogbugz.com/f/cases/21577/Cannot-read-from-dev-urandom' id '987079f9-a426-0d00-9738-39ed06b939b2' date '20 April 2018' time '10:11:39.216365 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.61' message 'introduction of ZnNewLineWriterStream from Pharo 7 (rename of ZnCrPortableWriteStream, which is kept for now)' id 'fedd8a88-a426-0d00-8f3e-083c03c1db46' date '20 April 2018' time '9:40:04.532943 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.60' message 'introduction of ZnIncomplete exception that gets thrown when character encoders encounter EOF prematurely' id '9245cf73-a426-0d00-9ae0-8e73005e273a' date '20 April 2018' time '9:34:16.699293 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.59' message 'Add integer encoding/decoding to ZnBuffered(Read|Write)Stream in the ''accessing-bytes'' protocolSingle fundamental implementation with size, signed/unsigned and big/little endian parametersAdd classic aliasesNew integer encoding/decoding tests in ZnBufferedStreamByteTests' id '2cd8efa1-9426-0d00-9d05-f7a50d639b15' date '19 April 2018' time '2:41:51.104416 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.58' message 'Apply Martin McClure''s patch to ZnBufferedReadStream>>readInto:startingAt:count: (do not rely on #atEnd)' id '7bddb7e1-d023-0d00-a5dd-901d0ecc2760' date '15 March 2018' time '9:19:04.331919 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.57' message 'merge in changes from pharo 7add ZnBufferedReadStream, ZnBufferedReadWriteStream,ZnBufferedWriteStream, ZnCharacterReadWriteStream, ZnEndianessReadWriteStreamadd more API to ZnEncodedStream' id 'c2d2a99c-b123-0d00-a0f3-0b2d07aab66f' date '13 March 2018' time '8:00:41.797694 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.1520938893' message 'merge in changes from pharo 7add ZnBufferedReadStream, ZnBufferedReadWriteStream,ZnBufferedWriteStream, ZnCharacterReadWriteStream, ZnEndianessReadWriteStreamadd more API to ZnEncodedStream' id '9d31a791-b123-0d00-a0f2-103507aab66f' date '13 March 2018' time '7:57:37.075975 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-GitHub.1520938892' message 'Merge pull request #1031 from guillep/18414-Change-usages-of-StandardFileStream-and-MultiByteFileStream-to-File--decorators

18414 change usages of standard file stream and multi byte file stream to file  decorators' id '148fba87-7730-5add-995e-5235c6a36903' date '13 March 2018' time '12:01:32 pm' author 'GitHub' ancestors () stepChildren ())(name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.56' message 'Add ZnCharacterReadStream>>#upToAll:Add ZnCrPortableWriteStream' id '9ef8664f-2b21-0d00-b982-e3af02ff0a5b' date '9 February 2018' time '4:56:36.697761 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.55' message '1st version of ZnPositionableReadStream and ZnPositionableReadStreamTests' id '74591cd8-1120-0d00-bb47-1345075354d7' date '26 January 2018' time '5:08:29.508222 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.54' message 'Various changes to character encoding, especially UTF-8, to simplify some internal code (removed some optimalizations), streamlined, commented and optimized other minor aspects.ZnUTF8Encoder>>#optimizedReadInto:startingAt:count:fromString was completely removed (to ugly, difficult to understand, messy, buggy)Move BOM methods up from ZnEndianSensitiveUTFEncoder to ZnUTFEncoderAdd ZnUTF8Encoder class>>#default and use it throughoutAdd some more tests(cases) esp. reading BOM preceded input using #readInto:startingAt:count:fromStream: (thx Henrik Nergaard)' id 'c16d7660-c014-0d00-85a1-801601ab7d6d' date '4 September 2017' time '5:19:41.889207 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.53' message 'Make ZnCharacterEncoder>>#hash faster by removing the useless #name message (thx Henrik Nergaard)' id '0ec9a420-0614-0d00-8608-75000e21040c' date '26 August 2017' time '11:07:27.268371 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.52' message 'Add support to ZnUTF8Encoder tp read illegal UTF-8 encoded input data by making ZnInvalidUTF8 resumable and allow the insertion of a substitution character in the output (needless to say this is not recommended)Add ZnCharacterEncoderTests>>#testUTF8ReadFaultyInput' id '0ea82d9e-a513-0d00-a81e-871d00212907' date '21 August 2017' time '3:59:01.562616 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.51' message 'the class instance variable "ByteTextConverters" in ZnSimplifiedByteEncoder should start lowercase and therefore be named "byteTextConverters" (thx Torsten Bergmann)' id '2bee927f-7d0c-0d00-b147-0d6c0dbbe49d' date '22 May 2017' time '2:10:48.019758 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.50' message 'Use ZnDefaultCharacterEncoder as main settingZnDefaultCharacterEncoder now has an explicit default (ZnUTF8Encoder)Adapt ZnCharacterEncoder class>>#defaultUse ZnDefaultCharacterEncoder in ZnPercentEncoder>>#characterEncoderAdapt a unit test for the new default ' id '122e747e-9d0b-0d00-987d-06b50b3bcd61' date '11 May 2017' time '10:55:56.552979 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.49' message 'Add ZnCharacterEncoder class>>#detectEncoding: to try to heuristically and unreliably guess the encoding used by a collection of bytesAdd ZnCharacterEncoderTests>>#testDetectEncodingAdd #= and #hash to ZnSimplifiedByteEncoder and ZnEndianSensitiveUTFEncoderAlways use canonical name in ZnSimplifiedByteEncoder class>>#newForEncoding:' id 'fe8b083d-010b-0d00-9df5-fde304bccfdc' date '3 May 2017' time '4:30:44.081888 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.48' message 'Extend ZnBase64Encoder with more options to deal with whitespace.Add ZnBase64Encoder>>#whitespace: to allow setting a mode:- nil for no whitespace allowed- #separator for only separators allowed as whitespace- #any for all non-alphabet characters allowed as whitespace (the default)Fix ZnBase64Encoder>>#decode:to: to allow whitespace at the end of inputAdd #testWhitespaceAtEndFix #testDecodingErrors to work with different modesNote that whitespace is only allowed inbetween blocks of 4 characters' id '6989fe34-840a-0d00-8537-fa1f024331ee' date '27 April 2017' time '11:20:38.296135 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.47' message 'Add #cr #lf and #crlf to ZnBufferedWriteStream (#tab and #space were already present)' id 'b59848aa-3707-0d00-ac65-4cb70b4d838c' date '16 March 2017' time '10:45:58.7189 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.46' message 'Add ZnCharacterEncoder class>>#knownEncodingIdentifiers to return the collection of all known encoding identifiers in the system - thx Nicolai Hess for the requestMake sure #null is resolved to ZnNullEncoderAdd ZnCharacterEncoderTests>>#testKnownEncodingIdentifiers' id 'a2928299-1dda-4fdf-b15e-e5d7bed2373e' date '7 February 2017' time '11:07:31.306364 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.45' message 'Refactored ZnCharacterReadStream to inherit from ZnEncodedStream and ZnEncodedReadStreamRefactored ZnCharacterWriteStream to inherit from ZnEncodedStream and ZnEncodedWriteStreamAdded ZnCodePointReadStream and ZnCodePointWriteStreamAdded ZnCharacterEncoderTests>>#testCodePointStreams' id '6d26c23d-d0c9-455b-b050-c4eac09866c7' date '26 January 2016' time '11:35:38.744827 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.44' message 'Make the UTF encoders refuse surrogate code points, the range [ U+D800 .. U+DFFF ]Refactor/extend ZnCharacterEncoder hierarchy to first work on code points and then characters as a derivative; the new key methods are:#nextCodePointFromStream:#nextPutCodePoint:toStream:#encodedByteCountForCodePoint:New unit tests #testCodePointEncodingDecoding and #testUTF8SurrogateCodePointsShouldFail' id 'fb1816d5-7d84-42f6-8297-5f2892e72c8b' date '15 January 2016' time '5:02:40.17624 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.43' message 'Added ZnUTF32Encoder and unit testsSome refactoring (introduced ZnUTFEncoder and ZnEndianSensitiveEncoder)' id '0e4458c0-5526-49b9-8613-201c105b1664' date '7 January 2016' time '2:58:54.624021 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.42' message 'optimize ZnBase64Encoder, adding some tests and benchmarks' id '68a31c30-ba78-4aaf-9774-3e38707c115f' date '31 October 2015' time '11:26:10.593739 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.41' message 'Introduction of ZnByteEncoder class>>#newFromUrl:Refactoring introduced #top123FromUnicodeSpec:' id 'c6b0b265-827d-439b-b241-81bce4c56dc3' date '20 October 2015' time '6:35:23.106957 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.40' message 'Move all convenience class methods to ZnCharacterEncoder instead of its subclasses who should not be referenced directly' id 'e524b4e4-1200-4f16-9efc-1c343e49d57b' date '24 July 2015' time '3:28:31.874466 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.39' message 'Added cp850 encoding (thx Henrik Sperre Johansen)Added ZnSimplifiedByteEncoder class>>#byteTextConverters accessor to do lazy initialization if needed' id '734c248b-f217-473f-b874-051ad0359a9d' date '10 June 2015' time '3:48:00.688786 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.38' message 'Experimental change: introduction of ZnSimplifiedByteEncoder as a low memory variant of the full featured ZnByteEncoder, supporting only latin1 (iso-8859-1) and ascii.Move ASCII handling from ZnNullEncoder to ZnSimplifiedByteEncoder making it strict by default.Needs   ZnSimplifiedByteEncoder initialize.  ZnByteEncoder initialize.' id '8b4b6a04-d2a2-4fec-97fe-6faf498bc54b' date '9 June 2015' time '5:21:51.278641 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.37' message 'Added ZnFastLineReader' id '5f22dc6e-11a9-4e4d-8138-ab5790c529f5' date '11 December 2014' time '2:41:09.979903 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.36' message 'Added  ZnBufferedWriteStream>>#tab  ZnCharacterWriteStream>>#tab  ZnCharacterWriteStream>>#print:' id 'da135054-2c33-4e39-abbe-1353cb8cfeb0' date '3 October 2014' time '11:02:07.465179 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.35' message 'Added ZnCharacterReadStream>>#nextLine and ZnCharacterWriteStream>>#cr #lf and #crlf' id 'b6e5911f-4820-4947-ac71-6d064365b663' date '19 September 2014' time '5:20:41.449078 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.34' message 'Added convencience methods String>>#encodeWith: String>>#utf8Encoded as well as ByteArray>>#decodeWith: ByteArray>>#utf8DecodedIntroduced #asZnCharacterEncoderAdded ZnByteEncoder>>#byteDomain ZnByteEncoder>>#characterDomain as well as ZnByteEncoder class>>#knowEncodingIdentifiersAdded tests for the new API (including #testAllByteEncoderDomains)Improved documentation a bit' id 'fedaadd9-603e-457b-a9ad-6bdb607918fc' date '15 September 2014' time '1:45:18.951954 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.33' message 'Extend ZnCharacterEncoder so that identifiers are handled in a canonical way (see #canonicalEncodingIdentifier:)Extend ZnByteEncoder to handle a standard set of encodings, more specifically ISO/IEC 8859 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15 and 16, Windows Codepages 866, 874, 1250, 1251, 1252, 1253, 1253, 1254, 1255, 1256, 1257, 1258, KOI8 R & U as well as Mac Roman & Cyrillic - each of these with a number of aliases like latin1, latin2, latin3, latin4, latin5, latin6, cyrillic, arabic, greek and hebrew.' id '3562c596-125d-47a2-a58e-4fb757d8f54e' date '13 September 2014' time '10:50:37.578247 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.32' message 'Add ZnDefaultCharacterEncoder dynamic variableAdd ZnCharacterEncoder class>>#default and use it in #newForEncoding:' id '59b05663-9101-456d-8f70-eb159c190ed3' date '14 May 2014' time '4:12:07.797126 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.31' message 'Fixed a one-off error in ZnUTF8Encoder>>#nextPut:toStream (thanks Igor Stasenko)' id '3f6ae285-2973-4451-833b-16afbd0658d3' date '2 April 2014' time '2:14:36.890651 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.30' message 'Added ZnCharacterEncoder>>#backOnStream: with implementations for all subclasses and unit tests #testUTF8Back and #testUTF16Back' id '64a4aea4-15c4-46bb-a972-000726405731' date '24 February 2014' time '4:13:53.395925 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.29' message 'Add an #decodePlusAsSpace boolean option to ZnPercentEncoderRefactor error signalling of ZnPercentEncoder' id '7c967721-cc71-4286-ad55-42017589ffde' date '15 February 2014' time '10:28:14.918905 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.28' message 'ZnByteStringBecameWideString is now a resumable Error instead of a Notification (as suggested by henrik sperre johansen);Added ZnByteStringBecameWideString>>#becomeForward convenience methodFixed ZnCharacterReadStream>>#readInto:startingAt:count: to do the actual becomeForward when needed so that clients are not affected' id 'f104e1ee-7fe5-4a23-a650-197dd9462783' date '13 November 2013' time '3:04:00.925461 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.27' message 'Added new ZnUTF16EncoderMinor refactoring to ZnCharacterEncoder hierarchy' id '29824770-7b9d-4377-a934-7bb2fbeefefb' date '8 November 2013' time '4:18:07.642898 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.26' message 'ZnCharacterReadStream and ZnCharacterWriteStream now use the optimized bulk reading/writing methods from ZnCharacterEncoder (#readInto:startingAt:count:fromStream: and #next:putAll:startingAt:toStream: respectively)Fixed a bug in ZnUTF8Encoder>>#optimizedReadInto:startingAt:count:fromStream:Some refactoring and cleanup of ZnUTF8Encoder and ZnByteEncoderAdded 2 more unit tests ' id 'dcb21b30-9596-446d-801c-b091cf3f415e' date '6 November 2013' time '10:09:58.837656 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.25' message 'Merging in some method recategorizations from Pharo' id '4e458b93-d301-482c-92f0-08b724657f16' date '25 October 2013' time '7:00:11.654948 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.22' message 'Made the default safeSet of ZnPercentEncoder an explicit constant named #rfc3986UnreservedCharacters' id '3d7bc73c-48b3-40af-8c01-5ba533472a92' date '24 October 2013' time '10:40:00.795063 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.21' message 'Added an optimalization to ZnUTF8Encoder>>#readInto:startingAt:count:fromStream: to avoid the price of #becomeForward: when a ByteString to WideString conversion happens' id '29f57ebd-e428-46d7-aa36-233e4bc40938' date '11 June 2013' time '4:31:30.150014 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.20' message 'merge' id '23dc613d-4596-483b-945a-95e8497e06e9' date '11 June 2013' time '9:21:39.986544 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.19' message 'Added an optimized ZnUTF8Encoder>>#decodeBytes: and an even faster #decodeBytesIntoWideString: (thx johnny/JanStruz)' id '2fd6df01-681f-4453-abc0-9422a8103e65' date '10 June 2013' time '11:19:58.489542 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.17' message 'Introduction of an explicit ZnInvalidUTF8 exception.' id 'aae299b0-a550-47c6-a444-847d01206d94' date '3 June 2013' time '8:13:30.308 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.16' message 'Fix to an edge case in ZnUTF8Encoder>>#optimizedReadInto:startingAt:count:fromStream:' id 'd6bdd5aa-3f6d-4786-a3b8-5dcaeba2a5aa' date '27 May 2013' time '4:19:29.250496 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.15' message 'Bugfix to ZnUTF8Encoder class>>#initialize (circular dependency)' id '2c097f3b-3eaa-4626-ae1f-620df08ef898' date '25 May 2013' time '2:00:52.201637 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.14' message 'ZnUTF8Encoder:- enabled #next:putAll:startingAt:toStream: for real- added & enabled #optimizedReadInto:startingAt:count:fromStream:- #nextFromStream now signals specific errors on eof- some refactoring/cleanup' id 'a4e03928-dd20-4e7c-b686-28e10a8130c3' date '25 May 2013' time '10:29:45.302325 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.13' message 'Added ZnCharacterEncoder>>#readInto:startingAt:count:fromStream with an optimized implementation for ZnNullEncoder' id 'fbc0480f-5050-4930-ab24-0fb8464d82a1' date '23 May 2013' time '12:25:16.073599 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.12' message 'Introduction of ZnCharacterEncoder>>#next:putAll:startingAt:toStream with optimized implementations in ZnNullEncoder and ZnUTF8Encoder for ByteString instances' id '7505c957-45dc-4689-a9e3-25a0a00be1f6' date '22 May 2013' time '4:15:39.298311 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.11' message 'Added ZnBufferedWriteStream>>#finish as alias for #flushBuffer' id '14216331-a683-4994-9aa2-cdf56d325fb7' date '19 May 2013' time '11:45:46.463 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.10' message 'Bugfix to ZnUTF8Encoder>>#nextPut:toStream (codepoints > 65535 were wrongly encoded)' id '9548942a-1b84-48a0-8976-dac39be9f314' date '16 May 2013' time '11:11:26.082 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.9' message 'fixed a typo in a class comment' id '304b757c-8af9-4723-a7c0-fed57c353db2' date '14 May 2013' time '1:37:37.762 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.8' message 'Typo/bug in ZnCharacterWriteStream>>#encoding: (thx Stephane Ducasse)' id '2642837d-126e-44c1-a980-e147d940e9d2' date '19 April 2013' time '1:03:26.68 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.7' message 'Added String>>#urlEncoded & #urlDecoded - Thx Camillo Bruni' id '6715de50-a8b8-4240-a1ef-1282e1e343c7' date '16 April 2013' time '9:19:02.777 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.6' message 'Bugfix to ZnPercentEncoder: always use 2 hex digits (Thanks Benjamin Van Ryseghem)' id 'af573099-bafb-4e38-9192-4440765e8883' date '1 March 2013' time '9:35:27.12 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.5' message 'merging in some Gemstone portability changes by Ken Treis' id 'aa29124f-b47d-438c-b086-8cb23a17d2cd' date '21 January 2013' time '1:13:52.198 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-KenTreis.4.1' message 'Minor changes for GemStone compatibility:* Removed a stray period after a method comment* When printing in base 16, used #printOn:base:showRadix:' id 'bc01d2d5-7bf2-4bb3-be36-8f9faff96af3' date '19 January 2013' time '11:22:49 am' author 'KenTreis' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.4' message 'add a comment to ZnByteEncoder class>>#initialize to make sure it get executed when loaded in an image where it is already present (Thx Lukas Renggli for suggesting the idea)' id '2070bf5a-a914-4d68-9469-58eb6c85aeb8' date '15 January 2013' time '5:09:22 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.3' message 'use ''asZnUrl retrieveContents'' for simple. one off, non critical HTTP client usage in ZnByteEncoder class>>#parseUnicodeOrgSpec' id '1804c2bb-41a6-48ab-9404-64ea1e486ed5' date '15 January 2013' time '2:58:21 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.2' message 'stop using ZnNullEncoder for latin1;added #beLenient option to make a ZnByteEncoder non-strict (the old behavior)' id '07e720c3-e179-40b0-94de-073e11a8bd45' date '17 December 2012' time '4:08:17 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.1' message 'creation of Zinc-Character-Encoding-[Core|Tests] by moving various classes out of Zinc-HTTP' id '4e1d9613-d6ec-4e2c-8587-f69086cb2208' date '16 December 2012' time '5:01:29 am' author 'SvenVanCaekenberghe' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Zinc-Character-Encoding-Core-SvenVanCaekenberghe.18' message 'Added support to ZnUTF8Encoder to detect overlong (non-shortest form) encodings as well as to skip the Unicode Byte Order Mark (BOM) character' id 'd07b55a8-4a53-40d8-85eb-63af21c7fb12' date '4 June 2013' time '5:28:27.116309 pm' author 'SvenVanCaekenberghe' ancestors ((id 'aae299b0-a550-47c6-a444-847d01206d94')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Zinc-Character-Encoding-Core-StephaneDucasse.24' message '- issue 11420 Monticello is looking for all ancestors even when there are none	https://pharo.fogbugz.com/default.asp?11420	- issue 11408 https://pharo.fogbugz.com/default.asp?11408	https://pharo.fogbugz.com/default.asp?11408' id '81e1cd70-ed69-4065-ac1d-8bb36fd9ecc4' date '14 August 2013' time '3:13:02.019678 pm' author 'StephaneDucasse' ancestors ((name 'Zinc-Character-Encoding-Core-StephaneDucasse.22' message 'another try.... Normally there is no automatic method cat diry package' id '4ec87a5f-b3c4-45e3-966b-8fa9a3b0dae4' date '14 August 2013' time '2:18:15.416895 pm' author 'StephaneDucasse' ancestors ((id '29f57ebd-e428-46d7-aa36-233e4bc40938')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())