(name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.46' message 'Add ZnNewLineWriterStream>>#closeAdd ZnNewLineWriterStream>>testClose' id '76082895-7436-0d00-a5d3-3afa0b71af2b' date '7 November 2018' time '2:10:43.773817 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.45' message 'Fix ZnBufferedReadWriteStreamTests>>#[testReadThenWrite|testWriteThenRead] (use #with: instead of #on: constructor - thx Johan Brichau)' id '9a06d6fc-7232-0d00-96d8-a4ff0e859641' date '17 September 2018' time '3:35:46.784307 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.44' message 'add an addional #reset before using a initialized ReadWriteStream (https://github.com/pharo-project/pharo/pull/1648#issuecomment-407730982)' id '3b188512-342e-0d00-877c-5c7907cb69e4' date '25 July 2018' time '2:51:21.128184 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.43' message 'introduction of ZnNewLineWriterStream from Pharo 7 (rename of ZnCrPortableWriteStream, which is kept for now)rename test class' id '7d145b8b-a426-0d00-8f3f-a4bd03c1db46' date '20 April 2018' time '9:40:51.732974 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.42' message 'introduction of ZnIncomplete exception that gets thrown when character encoders encounter EOF prematurely' id '37e7cf75-a426-0d00-9ae1-367e005e273a' date '20 April 2018' time '9:34:50.290387 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.41' message 'don''t use #deny:equals: for backwards compatibility' id 'e391a9cd-9526-0d00-b523-5bfe09f51f00' date '19 April 2018' time '4:05:39.663674 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.40' message 'Add integer encoding/decoding to ZnBuffered(Read|Write)Stream in the ''accessing-bytes'' protocolSingle fundamental implementation with size, signed/unsigned and big/little endian parametersAdd classic aliasesNew integer encoding/decoding tests in ZnBufferedStreamByteTests' id '134f5d04-9526-0d00-9d06-82500d639b15' date '19 April 2018' time '3:09:22.445881 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.39' message 'Conditionally skip ZnBufferedReadWriteStreamTests>>#testReadThenWrite and ZnBufferedReadWriteStreamTests>>#testWriteThenRead [ Related to missing ReadWriteStream changes from Pharo 7 ]' id 'ae26f63d-c223-0d00-8eb2-f5c0099ab009' date '14 March 2018' time '3:51:07.408228 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.38' message 'added ZnBufferedReadWriteTests from pharo 7' id '8313f837-be23-0d00-8c75-8c9b031dff65' date '14 March 2018' time '11:03:07.002017 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-GitHub.1520938892' message 'Merge pull request #1031 from guillep/18414-Change-usages-of-StandardFileStream-and-MultiByteFileStream-to-File--decorators

18414 change usages of standard file stream and multi byte file stream to file  decorators' id 'a5ede385-0b76-5d4d-839f-ad273fbb3b47' date '13 March 2018' time '12:01:32 pm' author 'GitHub' ancestors () stepChildren ())(name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.37' message 'Add tests for ZnCharacterReadStream>>#upToAll:Add tests for ZnCrPortableWriteStream' id '3afa9552-2b21-0d00-b983-1d4202ff0a5b' date '9 February 2018' time '4:57:30.109994 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.36' message '1st version of ZnPositionableReadStream and ZnPositionableReadStreamTests' id '02694dd9-1120-0d00-bb48-2d39075354d7' date '26 January 2018' time '5:08:49.500675 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.35' message 'Various changes to character encoding, especially UTF-8, to simplify some internal code (removed some optimalizations), streamlined, commented and optimized other minor aspects.ZnUTF8Encoder>>#optimizedReadInto:startingAt:count:fromString was completely removed (to ugly, difficult to understand, messy, buggy)Move BOM methods up from ZnEndianSensitiveUTFEncoder to ZnUTFEncoderAdd ZnUTF8Encoder class>>#default and use it throughoutAdd some more tests(cases) esp. reading BOM preceded input using #readInto:startingAt:count:fromStream: (thx Henrik Nergaard)' id '9adbbb62-c014-0d00-85a2-4eb801ab7d6d' date '4 September 2017' time '5:20:19.99375 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.34' message 'Add support to ZnUTF8Encoder tp read illegal UTF-8 encoded input data by making ZnInvalidUTF8 resumable and allow the insertion of a substitution character in the output (needless to say this is not recommended)Add ZnCharacterEncoderTests>>#testUTF8ReadFaultyInput' id 'e6b7489f-a513-0d00-a81f-8e1c00212907' date '21 August 2017' time '3:59:20.113364 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.33' message '#testByteEncoderFromUrl should use local URL (forgot to include a change from Pavel)' id '75d71a82-0000-0000-b4f1-fdbb07f17896' date '1 June 2017' time '12:48:03.940542 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.32' message 'Use ZnDefaultCharacterEncoder as main settingZnDefaultCharacterEncoder now has an explicit default (ZnUTF8Encoder)Adapt ZnCharacterEncoder class>>#defaultUse ZnDefaultCharacterEncoder in ZnPercentEncoder>>#characterEncoderAdapt a unit test for the new default ' id 'a3756e80-9d0b-0d00-987e-6c5a0b3bcd61' date '11 May 2017' time '10:56:29.7325 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.31' message 'Add ZnCharacterEncoder class>>#detectEncoding: to try to heuristically and unreliably guess the encoding used by a collection of bytesAdd ZnCharacterEncoderTests>>#testDetectEncodingAdd #= and #hash to ZnSimplifiedByteEncoder and ZnEndianSensitiveUTFEncoderAlways use canonical name in ZnSimplifiedByteEncoder class>>#newForEncoding:' id '30ef8b3e-010b-0d00-9df6-4a9304bccfdc' date '3 May 2017' time '4:31:09.469852 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.30' message 'Extend ZnBase64Encoder with more options to deal with whitespace.Add ZnBase64Encoder>>#whitespace: to allow setting a mode:- nil for no whitespace allowed- #separator for only separators allowed as whitespace- #any for all non-alphabet characters allowed as whitespace (the default)Fix ZnBase64Encoder>>#decode:to: to allow whitespace at the end of inputAdd #testWhitespaceAtEndFix #testDecodingErrors to work with different modesNote that whitespace is only allowed inbetween blocks of 4 characters' id '487d1336-840a-0d00-8538-28c0024331ee' date '27 April 2017' time '11:20:56.446523 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.29' message 'Change ZnCharacterEncoderTests>>#testKnownEncodingIdentifiers not to depend on #loremIpsum since that did not yet exist in Pharo 2' id 'd45f05f4-f87a-4e44-a712-75eb60281716' date '7 February 2017' time '1:47:05.773748 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.28' message 'Add ZnCharacterEncoder class>>#knownEncodingIdentifiers to return the collection of all known encoding identifiers in the system - thx Nicolai Hess for the requestMake sure #null is resolved to ZnNullEncoderAdd ZnCharacterEncoderTests>>#testKnownEncodingIdentifiers' id '938d1683-b8c4-4861-b1e1-f876b57405ef' date '7 February 2017' time '11:07:50.782471 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.27' message 'Refactored ZnCharacterReadStream to inherit from ZnEncodedStream and ZnEncodedReadStreamRefactored ZnCharacterWriteStream to inherit from ZnEncodedStream and ZnEncodedWriteStreamAdded ZnCodePointReadStream and ZnCodePointWriteStreamAdded ZnCharacterEncoderTests>>#testCodePointStreams' id 'e1f4b26b-756e-4962-978f-4f8bb20fd127' date '26 January 2016' time '11:35:22.561288 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.26' message 'Make the UTF encoders refuse surrogate code points, the range [ U+D800 .. U+DFFF ]Refactor/extend ZnCharacterEncoder hierarchy to first work on code points and then characters as a derivative; the new key methods are:#nextCodePointFromStream:#nextPutCodePoint:toStream:#encodedByteCountForCodePoint:New unit tests #testCodePointEncodingDecoding and #testUTF8SurrogateCodePointsShouldFail' id '3a5f3558-5db1-4626-9a51-b68209af57c3' date '15 January 2016' time '5:02:58.579438 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.25' message 'Added ZnUTF32Encoder and unit testsSome refactoring (introduced ZnUTFEncoder and ZnEndianSensitiveEncoder)' id 'e61988ea-b7bb-4a13-8a0f-5717ddf396e4' date '7 January 2016' time '2:59:17.56076 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.24' message 'optimize ZnBase64Encoder, adding some tests and benchmarks' id '7f97a732-c18a-446a-b4b6-ae71f814300a' date '31 October 2015' time '11:26:42.011768 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.23' message 'Added ZnCharacterEncoderTests>>#testByteEncoderFromUrl' id '265ff0e3-85df-47d2-8821-f9979aca15a0' date '20 October 2015' time '6:36:04.004228 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.22' message 'Added ZnFastLineReaderTests' id '2b4bba24-e860-43df-bf26-b74ee72b7732' date '11 December 2014' time '2:42:07.811622 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.21' message 'Added ZnCharacterReadStream>>#nextLine tests' id '76130296-c6dc-4b45-9d62-0263bef06987' date '19 September 2014' time '5:21:11.829641 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.20' message 'Added convencience methods String>>#encodeWith: String>>#utf8Encoded as well as ByteArray>>#decodeWith: ByteArray>>#utf8DecodedIntroduced #asZnCharacterEncoderAdded ZnByteEncoder>>#byteDomain ZnByteEncoder>>#characterDomain as well as ZnByteEncoder class>>#knowEncodingIdentifiersAdded tests for the new API (including #testAllByteEncoderDomains)Improved documentation a bit' id 'a46d02ed-9c57-43fc-a209-9a384f93ab12' date '15 September 2014' time '1:46:05.178598 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.19' message 'Added ZnCharacterEncoderTests>>#testDefault' id 'cc7354d5-2c22-49c0-a623-2c4ca77c4362' date '14 May 2014' time '4:13:04.761756 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.18' message 'Fixed a one-off error in ZnUTF8Encoder>>#nextPut:toStream (thanks Igor Stasenko)Added ZnCharacterEncoderTests>>#testUTF8Boundaries' id 'c7048056-52ae-484f-a466-7d537f66690a' date '2 April 2014' time '2:15:51.938152 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.17' message 'Added ZnCharacterEncoder>>#backOnStream: with implementations for all subclasses and unit tests #testUTF8Back and #testUTF16Back' id '3c83c9c9-17f1-4496-9a73-7bc8e1379d81' date '24 February 2014' time '4:14:48.140201 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.16' message 'Add an #decodePlusAsSpace boolean option to ZnPercentEncoder' id '1e120778-5490-405a-bc31-e8ad35c2e5b3' date '15 February 2014' time '10:29:10.766672 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.15' message 'Added a unit test to make sure ZnCharacterReadStream>>#readInto:startingAt:count: does an actual becomeForward when needed' id '8c41ee29-9906-4626-a9da-cb576980cd4c' date '13 November 2013' time '3:05:18.26391 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.14' message 'Added unit tests for the new ZnUTF16Encoder' id '6309f553-1632-438d-825c-b7a0f89193f4' date '8 November 2013' time '4:18:53.717919 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.13' message 'Added 2 more unit tests ZnCharacterReadStream and ZnCharacterWriteStream now use the optimized bulk reading/writing methods from ZnCharacterEncoder (#readInto:startingAt:count:fromStream: and #next:putAll:startingAt:toStream: respectively)Fixed a bug in ZnUTF8Encoder>>#optimizedReadInto:startingAt:count:fromStream:Some refactoring and cleanup of ZnUTF8Encoder and ZnByteEncoder' id '71b503eb-548e-4e2f-b80d-4d2b805bd11e' date '6 November 2013' time '10:11:11.411621 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.12' message 'Added an optimalization to ZnUTF8Encoder>>#readInto:startingAt:count:fromStream: to avoid the price of #becomeForward: when a ByteString to WideString conversion happens' id '691abf05-9485-451a-aea0-6a3a08dd2939' date '11 June 2013' time '4:33:14.469609 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.11' message 'merge' id '352e538c-d3c0-411c-be19-bb8e7181b391' date '11 June 2013' time '9:22:23.430785 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.10' message 'Added an optimized ZnUTF8Encoder>>#decodeBytes: and an even faster #decodeBytesIntoWideString: (thx johnny/JanStruz)' id 'c4338bce-4823-4afd-9c03-ed82ddf2afff' date '10 June 2013' time '11:20:45.283247 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.8' message 'Introduction of an explicit ZnInvalidUTF8 exception.' id '873f8d6a-5631-4dfb-8fb5-cda3e522c9ee' date '3 June 2013' time '8:15:02.069 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.7' message 'ZnUTF8Encoder:- enabled #next:putAll:startingAt:toStream: for real- added & enabled #optimizedReadInto:startingAt:count:fromStream:- #nextFromStream now signals specific errors on eof- some refactoring/cleanup' id 'dc085fe8-a4e4-46f4-a5c0-2678315e7428' date '25 May 2013' time '10:30:26.373159 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.6' message 'Introduction of ZnCharacterEncoder>>#next:putAll:startingAt:toStream with optimized implementations in ZnNullEncoder and ZnUTF8Encoder for ByteString instances' id '49bd7fce-ffab-4c09-9bf3-a3c550090cab' date '22 May 2013' time '4:16:17.452227 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.5' message 'Added String>>#urlEncoded & #urlDecoded - Thx Camillo Bruni' id 'c0387a62-53b8-421c-b74b-43d224d63afc' date '16 April 2013' time '9:19:26.735 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.4' message 'Bugfix to ZnPercentEncoder: always use 2 hex digits (Thanks Benjamin Van Ryseghem)' id 'a1f1c1f3-7878-45db-a609-0d4c3ff81e69' date '1 March 2013' time '9:36:51.992 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.3' message 'merging in some Gemstone portability changes by Ken Treis' id '9045618f-8b58-4d47-b6f8-8c18ca27869d' date '21 January 2013' time '1:16:18.853 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-KenTreis.2.1' message 'Minor changes for GemStone Compatibility that hopefully don''t break anything in Pharo:* Use `ByteArray new writeStream` rather than `#[] writeStream`* In ZnBase64EncoderTests, put CRs in for line breaks explicitly' id '0c541244-918a-4df3-9543-170b07bd6870' date '19 January 2013' time '11:05:42 am' author 'KenTreis' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.2' message 'stop using ZnNullEncoder for latin1;added #beLenient option to make a ZnByteEncoder non-strict (the old behavior)' id '5a82017c-5d0e-448c-a7a3-1b8f35aae2d2' date '17 December 2012' time '4:08:57 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.1' message 'creation of Zinc-Character-Encoding-[Core|Tests] by moving various classes out of Zinc-HTTP' id '9f23b0ec-9909-4839-b631-db4c10c9f613' date '16 December 2012' time '5:01:49 am' author 'SvenVanCaekenberghe' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.9' message 'Added support to ZnUTF8Encoder to detect overlong (non-shortest form) encodings as well as to skip the Unicode Byte Order Mark (BOM) character' id '3cfdf396-c625-4c8f-9aea-ede90630edcb' date '4 June 2013' time '5:29:38.969333 pm' author 'SvenVanCaekenberghe' ancestors ((id '873f8d6a-5631-4dfb-8fb5-cda3e522c9ee')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())